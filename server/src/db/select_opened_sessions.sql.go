// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: select_opened_sessions.sql

package db

import (
	"context"
)

const selectOpenedSessions = `-- name: SelectOpenedSessions :many
select
  gym_id,
  camera_id
from sessions
where user_id = $1
`

type SelectOpenedSessionsRow struct {
	GymID    int32 `db:"gym_id"`
	CameraID int64 `db:"camera_id"`
}

func (q *Queries) SelectOpenedSessions(ctx context.Context, userID int64) ([]SelectOpenedSessionsRow, error) {
	rows, err := q.db.QueryContext(ctx, selectOpenedSessions, userID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []SelectOpenedSessionsRow
	for rows.Next() {
		var i SelectOpenedSessionsRow
		if err := rows.Scan(&i.GymID, &i.CameraID); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
